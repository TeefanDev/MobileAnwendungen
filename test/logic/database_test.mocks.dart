// Mocks generated by Mockito 5.4.4 from annotations
// in gymbuddies/test/logic/database_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:gymbuddies/database/database_helper.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<void> insertContact(
    String? name,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertContact,
          [
            name,
            email,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteContact(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteContact,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearUpcomingTrainings() => (super.noSuchMethod(
        Invocation.method(
          #clearUpcomingTrainings,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearRecentTrainings() => (super.noSuchMethod(
        Invocation.method(
          #clearRecentTrainings,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getRecentTrainings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentTrainings,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> insertUpcomingTraining(
    String? training,
    String? date,
    int? trainingPlanId,
    int? contactId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertUpcomingTraining,
          [
            training,
            date,
            trainingPlanId,
            contactId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> insertRecentTraining(
    String? training,
    DateTime? dateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertRecentTraining,
          [
            training,
            dateTime,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, Object?>>> getRecentTraining() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentTraining,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
      ) as _i4.Future<List<Map<String, Object?>>>);

  @override
  _i4.Future<List<String>> getTrainings(String? tableName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrainings,
          [tableName],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getUpcomingTrainings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingTrainings,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteUpcomingTraining(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUpcomingTraining,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> insertTrainingPlan(
    String? name,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTrainingPlan,
          [
            name,
            description,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getTrainingPlans() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrainingPlans,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteTrainingPlan(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTrainingPlan,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
